#!/usr/bin/env python3
"""
Create Large Morpheme-Annotated Dataset for Better Text Generation
"""

import json
import os

def create_expanded_morpheme_dataset():
    """Create a comprehensive morpheme-annotated dataset with sentence continuations"""
    
    print("­ЪЈЌ№ИЈ Creating Large Morpheme-Annotated Dataset")
    print("=" * 60)
    
    # Expanded dataset with meaningful continuations
    morpheme_data = [
        # Verbs - Present tense
        {"word": "рІГрЇѕрѕЇрїІрѕЅ", "morphemes": ["рІГ", "рЇѕрѕЇрїЇ", "ріарѕЇ", "рІЇ"], "meaning": "they want", 
         "continuation": "рІЇрѕЃ рѕўрїарїБрЅх", "full_sentence": "рІГрЇѕрѕЇрїІрѕЅ рІЇрѕЃ рѕўрїарїБрЅх"},
        
        {"word": "рІГрѕ░рѕФрѕЅ", "morphemes": ["рІГ", "рѕ░рѕГ", "ріарѕЇ", "рІЇ"], "meaning": "they work", 
         "continuation": "рЅарЇІрЅЦрѕфріФ рІЇрѕхрїЦ", "full_sentence": "рІГрѕ░рѕФрѕЅ рЅарЇІрЅЦрѕфріФ рІЇрѕхрїЦ"},
        
        {"word": "рЅхрѕёрІ│рѕѕрЅй", "morphemes": ["рЅх", "рѕёрІх", "ріарѕѕ", "рЅй"], "meaning": "she goes", 
         "continuation": "рІѕрІ░ рЅцрЅ░ рѕўрїйрѕљрЇЇрЅх", "full_sentence": "рЅхрѕёрІ│рѕѕрЅй рІѕрІ░ рЅцрЅ░ рѕўрїйрѕљрЇЇрЅх"},
        
        {"word": "рІГрѕўрїБрѕЅ", "morphemes": ["рІГ", "рѕўрїБ", "ріарѕЇ", "рІЇ"], "meaning": "they come", 
         "continuation": "ріљрїѕ рїарІІрЅх", "full_sentence": "рІГрѕўрїБрѕЅ ріљрїѕ рїарІІрЅх"},
        
        {"word": "рІФрѕхрЅ░рѕЮрѕФрѕЇ", "morphemes": ["рІГ", "ріарѕхрЅ░рѕЮрѕГ", "ріарѕЇ"], "meaning": "he teaches", 
         "continuation": "ріарѕЏрѕГріЏ рЅІріЋрЅІ", "full_sentence": "рІФрѕхрЅ░рѕЮрѕФрѕЇ ріарѕЏрѕГріЏ рЅІріЋрЅІ"},
        
        # Verbs - Past tense
        {"word": "ріарѕЇрѕўрїБрЅйрѕЮ", "morphemes": ["ріарѕЇ", "рѕўрїБ", "рЅй", "рѕЮ"], "meaning": "she did not come", 
         "continuation": "рІЏрѕг рѕЮрѕйрЅх", "full_sentence": "ріарѕЇрѕўрїБрЅйрѕЮ рІЏрѕг рѕЮрѕйрЅх"},
        
        {"word": "рѕ░рѕЏрѕЂ", "morphemes": ["рѕ░рѕЏ", "рѕЂ"], "meaning": "I heard", 
         "continuation": "рїЦрѕЕ рІюріЊ", "full_sentence": "рѕ░рѕЏрѕЂ рїЦрѕЕ рІюріЊ"},
        
        {"word": "ріарІерѕЂрЅх", "morphemes": ["ріарІе", "рѕЂ", "рЅх"], "meaning": "I saw him", 
         "continuation": "рЅарїѕрЅарІФ", "full_sentence": "ріарІерѕЂрЅх рЅарїѕрЅарІФ"},
        
        # Prepositions and locations
        {"word": "рЅарЅцрЅ│рЅйріЋ", "morphemes": ["рЅа", "рЅцрЅх", "ріарЅйріЋ"], "meaning": "in our house", 
         "continuation": "рЅЦрІЎ рѕўрїйрѕљрЇЇрЅх ріарѕЅ", "full_sentence": "рЅарЅцрЅ│рЅйріЋ рЅЦрІЎ рѕўрїйрѕљрЇЇрЅх ріарѕЅ"},
        
        {"word": "рІѕрІ░рЅцрЅх", "morphemes": ["рІѕрІ░", "рЅцрЅх"], "meaning": "to home", 
         "continuation": "рЅарЇЇрїЦріљрЅх рѕёрІ▒", "full_sentence": "рІѕрІ░рЅцрЅх рЅарЇЇрїЦріљрЅх рѕёрІ▒"},
        
        {"word": "ріерібрЅхрІ«рїхрІФ", "morphemes": ["ріе", "рібрЅхрІ«рїхрІФ"], "meaning": "from Ethiopia", 
         "continuation": "рѕўрїБрѕЂ", "full_sentence": "ріерібрЅхрІ«рїхрІФ рѕўрїБрѕЂ"},
        
        # Nouns - Plural forms
        {"word": "рЅ░рѕЏрѕфрІјрЅй", "morphemes": ["рЅ░рѕЏрѕф", "рІјрЅй"], "meaning": "students", 
         "continuation": "рїаріЋріГрѕерІЇ рІГрѕЏрѕФрѕЅ", "full_sentence": "рЅ░рѕЏрѕфрІјрЅй рїаріЋріГрѕерІЇ рІГрѕЏрѕФрѕЅ"},
        
        {"word": "рѕўрїйрѕљрЇЇрЅХрЅй", "morphemes": ["рѕўрїйрѕљрЇЇ", "рЅХрЅй"], "meaning": "books", 
         "continuation": "рЅарѕўрІ░рѕГрІ░рѕфрІФ рѕІрІГ", "full_sentence": "рѕўрїйрѕљрЇЇрЅХрЅй рЅарѕўрІ░рѕГрІ░рѕфрІФ рѕІрІГ"},
        
        {"word": "рѕЇрїєрЅ╗рЅйріЋ", "morphemes": ["рѕЇрїєрЅй", "ріарЅйріЋ"], "meaning": "our children", 
         "continuation": "рЅарѕђрїѕрѕФрЅИрІЇ рІГрі«рѕФрѕЅ", "full_sentence": "рѕЇрїєрЅ╗рЅйріЋ рЅарѕђрїѕрѕФрЅИрІЇ рІГрі«рѕФрѕЅ"},
        
        # Adjectives and descriptors
        {"word": "рібрЅхрІ«рїхрІФрІі", "morphemes": ["рібрЅхрІ«рїхрІФ", "рІі"], "meaning": "Ethiopian", 
         "continuation": "рЅБрѕЁрѕЇ рІЇрЅЦ ріљрІЇ", "full_sentence": "рібрЅхрІ«рїхрІФрІі рЅБрѕЁрѕЇ рІЇрЅЦ ріљрІЇ"},
        
        {"word": "рѕђрїѕрѕФрІі", "morphemes": ["рѕђрїѕрѕГ", "ріарІі"], "meaning": "national", 
         "continuation": "ріЕрѕФрЅх ріарѕѕріЋ", "full_sentence": "рѕђрїѕрѕФрІі ріЕрѕФрЅх ріарѕѕріЋ"},
        
        # Common phrases and expressions
        {"word": "ріЦріЋрІ┤рЅх", "morphemes": ["ріЦріЋрІ┤рЅх"], "meaning": "how", 
         "continuation": "ріљрѕЁ?", "full_sentence": "ріЦріЋрІ┤рЅх ріљрѕЁ?"},
        
        {"word": "ріарѕІрІЇрЅЁрѕЮ", "morphemes": ["ріарѕЇ", "ріарІЇрЅЁ", "рѕЮ"], "meaning": "I don't know", 
         "continuation": "рѕўрѕЇрѕ▒ріЋ", "full_sentence": "ріарѕІрІЇрЅЁрѕЮ рѕўрѕЇрѕ▒ріЋ"},
        
        {"word": "рѕЇрѕўрїБ", "morphemes": ["рѕЇ", "рѕўрїБ"], "meaning": "let me come", 
         "continuation": "рІѕрІ░ ріЦріЊріЋрЅ░", "full_sentence": "рѕЇрѕўрїБ рІѕрІ░ ріЦріЊріЋрЅ░"},
        
        # Professional and academic terms
        {"word": "рѕўріЋрїЇрѕхрЅх", "morphemes": ["рѕўріЋрїЇрѕхрЅх"], "meaning": "government", 
         "continuation": "рѕѕрѕЁрІЮрЅЦ рІФрїѕрѕѕрїЇрѕІрѕЇ", "full_sentence": "рѕўріЋрїЇрѕхрЅх рѕѕрѕЁрІЮрЅЦ рІФрїѕрѕѕрїЇрѕІрѕЇ"},
        
        {"word": "рІЕріњрЅерѕГрѕ▓рЅ▓", "morphemes": ["рІЕріњрЅерѕГрѕ▓рЅ▓"], "meaning": "university", 
         "continuation": "рЅ░рѕЏрѕфрІјрЅй рІГрѕЏрѕФрѕЅ", "full_sentence": "рІЕріњрЅерѕГрѕ▓рЅ▓ рЅ░рѕЏрѕфрІјрЅй рІГрѕЏрѕФрѕЅ"},
        
        {"word": "ріарѕхрЅ░рѕЏрѕф", "morphemes": ["ріарѕхрЅ░рѕЏрѕф"], "meaning": "teacher", 
         "continuation": "рїЦрѕЕ рѕ░рІЇ ріљрІЇ", "full_sentence": "ріарѕхрЅ░рѕЏрѕф рїЦрѕЕ рѕ░рІЇ ріљрІЇ"},
        
        # Family and relationships
        {"word": "ріЦріЊрЅ┤", "morphemes": ["ріЦріЊрЅх", "ріц"], "meaning": "my mother", 
         "continuation": "рѕЮрїЇрЅЦ рЅ│рЅарѕхрѕІрѕѕрЅй", "full_sentence": "ріЦріЊрЅ┤ рѕЮрїЇрЅЦ рЅ│рЅарѕхрѕІрѕѕрЅй"},
        
        {"word": "ріарЅБрЅ┤", "morphemes": ["ріарЅБрЅх", "ріц"], "meaning": "my father", 
         "continuation": "рЅарЅбрѕ« рІГрѕ░рѕФрѕЇ", "full_sentence": "ріарЅБрЅ┤ рЅарЅбрѕ« рІГрѕ░рѕФрѕЇ"},
        
        {"word": "рІѕріЋрІхрѕю", "morphemes": ["рІѕріЋрІхрѕЮ", "ріц"], "meaning": "my brother", 
         "continuation": "ріЦріћріЋ рІГрѕерІ│ріЏрѕЇ", "full_sentence": "рІѕріЋрІхрѕю ріЦріћріЋ рІГрѕерІ│ріЏрѕЇ"},
        
        # Time expressions
        {"word": "рІЏрѕг", "morphemes": ["рІЏрѕг"], "meaning": "today", 
         "continuation": "рїЦрѕЕ рЅђріЋ ріљрІЇ", "full_sentence": "рІЏрѕг рїЦрѕЕ рЅђріЋ ріљрІЇ"},
        
        {"word": "ріљрїѕ", "morphemes": ["ріљрїѕ"], "meaning": "tomorrow", 
         "continuation": "рІѕрІ░ рѕЦрѕФ ріЦрѕёрІ│рѕѕрѕЂ", "full_sentence": "ріљрїѕ рІѕрІ░ рѕЦрѕФ ріЦрѕёрІ│рѕѕрѕЂ"},
        
        {"word": "рЅхріЊріЋрЅхріЊ", "morphemes": ["рЅхріЊріЋрЅхріЊ"], "meaning": "yesterday", 
         "continuation": "рІЮріЊрЅЦ ріљрЅарѕГ", "full_sentence": "рЅхріЊріЋрЅхріЊ рІЮріЊрЅЦ ріљрЅарѕГ"},
        
        # Actions and activities
        {"word": "ріаріљрЅЦрЅБрѕѕрѕЂ", "morphemes": ["ріа", "ріљрЅЦрЅЦ", "ріарѕѕрѕЂ"], "meaning": "I read", 
         "continuation": "рѕўрїйрѕљрЇЇ рЅарІерЅђріЉ", "full_sentence": "ріаріљрЅЦрЅБрѕѕрѕЂ рѕўрїйрѕљрЇЇ рЅарІерЅђріЉ"},
        
        {"word": "ріЦрЇЁрЇІрѕѕрѕЂ", "morphemes": ["ріЦ", "рЇЁрЇЇ", "ріарѕѕрѕЂ"], "meaning": "I write", 
         "continuation": "рІ░рЅЦрІ│рЅц рѕѕрІѕрІ│рїё", "full_sentence": "ріЦрЇЁрЇІрѕѕрѕЂ рІ░рЅЦрІ│рЅц рѕѕрІѕрІ│рїё"},
        
        {"word": "ріЦрїФрІѕрЅ│рѕѕрѕЂ", "morphemes": ["ріЦ", "рїФрІѕрЅх", "ріарѕѕрѕЂ"], "meaning": "I play", 
         "continuation": "рі│рѕх ріерїЊрІ░ріърЅ╝ рїІрѕГ", "full_sentence": "ріЦрїФрІѕрЅ│рѕѕрѕЂ рі│рѕх ріерїЊрІ░ріърЅ╝ рїІрѕГ"},
        
        # Complex verbs with objects
        {"word": "ріарѕІрІЇрЅђрІЇрѕЮ", "morphemes": ["ріарѕЇ", "ріарІЇрЅЁ", "рІЇ", "рѕЮ"], "meaning": "I don't know him", 
         "continuation": "рЅарІ░ріЋрЅЦ", "full_sentence": "ріарѕІрІЇрЅђрІЇрѕЮ рЅарІ░ріЋрЅЦ"},
        
        {"word": "ріЦрѕўрѕѕрѕ│рѕѕрѕЂ", "morphemes": ["ріЦ", "рѕўрѕѕрѕх", "ріарѕѕрѕЂ"], "meaning": "I will return", 
         "continuation": "ріерѕхрѕФ рЅаріІрѕІ", "full_sentence": "ріЦрѕўрѕѕрѕ│рѕѕрѕЂ ріерѕхрѕФ рЅаріІрѕІ"},
        
        # Emotions and feelings
        {"word": "ріЦрІѕрІ│рѕѕрѕЂ", "morphemes": ["ріЦ", "рІѕрІх", "ріарѕѕрѕЂ"], "meaning": "I love", 
         "continuation": "рѕђрїѕрѕгріЋ рЅарїБрѕЮ", "full_sentence": "ріЦрІѕрІ│рѕѕрѕЂ рѕђрїѕрѕгріЋ рЅарїБрѕЮ"},
        
        {"word": "ріЦрѕ│рЅђрЅЃрѕѕрѕЂ", "morphemes": ["ріЦ", "рѕ│рЅЁ", "рЅЃрѕѕрѕЂ"], "meaning": "I laugh", 
         "continuation": "рЅарѕхрЅЁрѕхрЅЁ ріљрїѕрѕГ", "full_sentence": "ріЦрѕ│рЅђрЅЃрѕѕрѕЂ рЅарѕхрЅЁрѕхрЅЁ ріљрїѕрѕГ"},
        
        # Questions and responses
        {"word": "рѕЏріЋріљрѕЁ", "morphemes": ["рѕЏріЋ", "ріљрѕЁ"], "meaning": "who are you", 
         "continuation": "ріЦрЅБріГрѕЁ?", "full_sentence": "рѕЏріЋріљрѕЁ ріЦрЅБріГрѕЁ?"},
        
        {"word": "рІерЅхріљрѕЁ", "morphemes": ["рІерЅх", "ріљрѕЁ"], "meaning": "where are you", 
         "continuation": "ріарѕЂріЋ?", "full_sentence": "рІерЅхріљрѕЁ ріарѕЂріЋ?"},
        
        # Colors and descriptions
        {"word": "рЅђрІГ", "morphemes": ["рЅђрІГ"], "meaning": "red", 
         "continuation": "ріарЅарЅБ рІГрѕўрѕхрѕІрѕЇ", "full_sentence": "рЅђрІГ ріарЅарЅБ рІГрѕўрѕхрѕІрѕЇ"},
        
        {"word": "рѕ░рѕЏрІФрІі", "morphemes": ["рѕ░рѕЏрІГ", "ріарІі"], "meaning": "blue", 
         "continuation": "рѕ░рѕЏрІГ рІЇрЅЦ ріљрІЇ", "full_sentence": "рѕ░рѕЏрІФрІі рѕ░рѕЏрІГ рІЇрЅЦ ріљрІЇ"},
        
        # Food and eating
        {"word": "ріЦрЅарѕІрѕѕрѕЂ", "morphemes": ["ріЦ", "рЅарѕЇ", "ріарѕѕрѕЂ"], "meaning": "I eat", 
         "continuation": "рібріЋрїђрѕФ рЅарѕХрѕхрЅх рїірІю", "full_sentence": "ріЦрЅарѕІрѕѕрѕЂ рібріЋрїђрѕФ рЅарѕХрѕхрЅх рїірІю"},
        
        {"word": "ріЦрїарїБрѕѕрѕЂ", "morphemes": ["ріЦ", "рїарїБ", "ріарѕѕрѕЂ"], "meaning": "I drink", 
         "continuation": "рѕ╗рІГ ріерїЊрІ░ріърЅ╝ рїІрѕГ", "full_sentence": "ріЦрїарїБрѕѕрѕЂ рѕ╗рІГ ріерїЊрІ░ріърЅ╝ рїІрѕГ"},
        
        # Weather and nature
        {"word": "рІЮріЊрЅЦ", "morphemes": ["рІЮріЊрЅЦ"], "meaning": "rain", 
         "continuation": "рІЏрѕг рІГрІўріЋрЅБрѕЇ", "full_sentence": "рІЮріЊрЅЦ рІЏрѕг рІГрІўріЋрЅБрѕЇ"},
        
        {"word": "рЇђрѕђрІГ", "morphemes": ["рЇђрѕђрІГ"], "meaning": "sun", 
         "continuation": "рЅарѕ░рѕЏрІГ рѕІрІГ", "full_sentence": "рЇђрѕђрІГ рЅарѕ░рѕЏрІГ рѕІрІГ"},
        
        # Work and professions
        {"word": "рІХріГрЅ░рѕГ", "morphemes": ["рІХріГрЅ░рѕГ"], "meaning": "doctor", 
         "continuation": "рЅ│рѕЏрѕџрІјрЅйріЋ рІФріГрѕЏрѕЇ", "full_sentence": "рІХріГрЅ░рѕГ рЅ│рѕЏрѕџрІјрЅйріЋ рІФріГрѕЏрѕЇ"},
        
        {"word": "ріљрѕГрѕх", "morphemes": ["ріљрѕГрѕх"], "meaning": "nurse", 
         "continuation": "рЅарѕєрѕхрЇњрЅ│рѕЇ рЅхрѕ░рѕФрѕѕрЅй", "full_sentence": "ріљрѕГрѕх рЅарѕєрѕхрЇњрЅ│рѕЇ рЅхрѕ░рѕФрѕѕрЅй"},
        
        # Technology and modern life
        {"word": "рі«рѕЮрЇњрІЇрЅ░рѕГ", "morphemes": ["рі«рѕЮрЇњрІЇрЅ░рѕГ"], "meaning": "computer", 
         "continuation": "рЅарІўрѕўріЊрІі рѕЋрІГрІѕрЅх", "full_sentence": "рі«рѕЮрЇњрІЇрЅ░рѕГ рЅарІўрѕўріЊрІі рѕЋрІГрІѕрЅх"},
        
        {"word": "рѕхрѕЇріГ", "morphemes": ["рѕхрѕЇріГ"], "meaning": "phone", 
         "continuation": "рѕЂрѕЇрїірІю ріЦрІГрІЏрѕѕрѕЂ", "full_sentence": "рѕхрѕЇріГ рѕЂрѕЇрїірІю ріЦрІГрІЏрѕѕрѕЂ"},
        
        # Transportation
        {"word": "рѕўріфріЊ", "morphemes": ["рѕўріфріЊ"], "meaning": "car", 
         "continuation": "рІѕрІ░ рѕЦрѕФ ріЦрїѕрЅБрѕѕрѕЂ", "full_sentence": "рѕўріфріЊ рІѕрІ░ рѕЦрѕФ ріЦрїѕрЅБрѕѕрѕЂ"},
        
        {"word": "ріарІЇрЅХрЅАрѕх", "morphemes": ["ріарІЇрЅХрЅАрѕх"], "meaning": "bus", 
         "continuation": "рЅарІерЅђріЉ ріЦрїЊрІЏрѕѕрѕЂ", "full_sentence": "ріарІЇрЅХрЅАрѕх рЅарІерЅђріЉ ріЦрїЊрІЏрѕѕрѕЂ"},
        
        # Sports and entertainment
        {"word": "ріЦрїЇрѕГрі│рѕх", "morphemes": ["ріЦрїЇрѕГ", "рі│рѕх"], "meaning": "football", 
         "continuation": "ріЦрІѕрІ│рѕѕрѕЂ рЅарїБрѕЮ", "full_sentence": "ріЦрїЇрѕГрі│рѕх ріЦрІѕрІ│рѕѕрѕЂ рЅарїБрѕЮ"},
        
        {"word": "рѕЎрІџрЅЃ", "morphemes": ["рѕЎрІџрЅЃ"], "meaning": "music", 
         "continuation": "ріЦрѕ░рѕЏрѕѕрѕЂ рЅарѕўрІЮріЊріЏ", "full_sentence": "рѕЎрІџрЅЃ ріЦрѕ░рѕЏрѕѕрѕЂ рЅарѕўрІЮріЊріЏ"}
    ]
    
    print(f"РюЁ Created {len(morpheme_data)} comprehensive examples")
    
    return morpheme_data

def convert_to_training_format(morpheme_data):
    """Convert morpheme data to training format with byte sequences"""
    
    print("­Ъћё Converting to Training Format")
    print("=" * 40)
    
    training_data = []
    
    for entry in morpheme_data:
        word = entry["word"]
        morphemes = entry["morphemes"]
        
        # Convert to bytes
        word_bytes = word.encode('utf-8')
        byte_sequence = [b for b in word_bytes]
        
        # Create boundary labels
        boundary_labels = [0] * len(byte_sequence)
        
        # Mark morpheme boundaries
        current_pos = 0
        for i, morpheme in enumerate(morphemes):
            if i == 0:
                boundary_labels[0] = 1  # Start of word
            else:
                # Find morpheme start in remaining text
                remaining_word = word[current_pos:]
                morpheme_start = remaining_word.find(morpheme)
                if morpheme_start >= 0:
                    # Convert character position to byte position
                    char_to_byte_pos = len(word[:current_pos + morpheme_start].encode('utf-8'))
                    if char_to_byte_pos < len(boundary_labels):
                        boundary_labels[char_to_byte_pos] = 1
            
            current_pos += len(morpheme)
        
        training_entry = {
            "word": word,
            "morphemes": morphemes,
            "meanings": entry.get("meaning", ""),
            "continuation": entry.get("continuation", ""),
            "full_sentence": entry.get("full_sentence", word),
            "byte_sequence": byte_sequence,
            "boundary_labels": boundary_labels,
            "length": len(byte_sequence)
        }
        
        training_data.append(training_entry)
    
    print(f"РюЁ Converted {len(training_data)} entries to training format")
    
    return training_data

def save_expanded_dataset(training_data):
    """Save the expanded dataset"""
    
    output_path = "data/expanded_boundary_training_data.json"
    os.makedirs("data", exist_ok=True)
    
    with open(output_path, 'w', encoding='utf-8') as f:
        json.dump(training_data, f, ensure_ascii=False, indent=2)
    
    print(f"­ЪњЙ Saved expanded dataset to {output_path}")
    print(f"­ЪЊі Dataset size: {len(training_data)} examples")
    
    # Print sample entries
    print(f"\n­ЪЊЮ Sample entries:")
    for i, entry in enumerate(training_data[:3]):
        print(f"   {i+1}. {entry['word']} Рєњ {entry['full_sentence']}")
    
    return output_path

if __name__ == "__main__":
    print("­ЪЈЌ№ИЈ Creating Large Morpheme-Annotated Dataset")
    print("=" * 70)
    
    # Create comprehensive dataset
    morpheme_data = create_expanded_morpheme_dataset()
    
    # Convert to training format
    training_data = convert_to_training_format(morpheme_data)
    
    # Save dataset
    dataset_path = save_expanded_dataset(training_data)
    
    print(f"\n­Ъј» DATASET SUMMARY:")
    print(f"   Total examples: {len(training_data)}")
    print(f"   File: {dataset_path}")
    print(f"   Ready for training!")
    
    print(f"\n­Ъџђ Next step: Train with expanded dataset for meaningful continuations!")